<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lance.dao.mapper.BlogsMapper">
  <resultMap id="BaseResultMap" type="com.lance.bean.Blogs">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="blogName" jdbcType="VARCHAR" property="blogname" />
    <result column="imgName" jdbcType="VARCHAR" property="imgname" />
    <result column="blogContent" jdbcType="VARCHAR" property="blogcontent" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="deleted" jdbcType="VARCHAR" property="deleted" />
    <result column="hot" jdbcType="INTEGER" property="hot" />
    <result column="visitTime" jdbcType="INTEGER" property="visittime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, blogName, imgName, blogContent, date, author, deleted, hot, visitTime
  </sql>
  <select id="selectByExample" parameterType="com.lance.bean.BlogsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blogs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectBlogForIndex" parameterType="com.lance.bean.BlogsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blogs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blogs
    where Id = #{id,jdbcType=INTEGER}
  </select>

  <select id="searchBlog" parameterType="com.lance.bean.Blogs" resultMap="BaseResultMap">
    select *
    from blogs
    where blogname like "%"#{blogname,jdbcType=VARCHAR}"%" or blogcontent like "%"#{blogcontent,jdbcType=VARCHAR}"%" or blogs.date  like "%"#{date,jdbcType=VARCHAR}"%"
    or author like "%"#{author,jdbcType=VARCHAR}"%"
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blogs
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lance.bean.BlogsExample">
    delete from blogs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lance.bean.Blogs">
    insert into blogs (Id, blogName, imgName, 
      blogContent, date, author, 
      deleted, hot, visitTime
      )
    values (#{id,jdbcType=INTEGER}, #{blogname,jdbcType=VARCHAR}, #{imgname,jdbcType=VARCHAR}, 
      #{blogcontent,jdbcType=VARCHAR}, #{date,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{deleted,jdbcType=VARCHAR}, #{hot,jdbcType=INTEGER}, #{visittime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lance.bean.Blogs">
    insert into blogs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="blogname != null">
        blogName,
      </if>
      <if test="imgname != null">
        imgName,
      </if>
      <if test="blogcontent != null">
        blogContent,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="hot != null">
        hot,
      </if>
      <if test="visittime != null">
        visitTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blogname != null">
        #{blogname,jdbcType=VARCHAR},
      </if>
      <if test="imgname != null">
        #{imgname,jdbcType=VARCHAR},
      </if>
      <if test="blogcontent != null">
        #{blogcontent,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="hot != null">
        #{hot,jdbcType=INTEGER},
      </if>
      <if test="visittime != null">
        #{visittime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lance.bean.BlogsExample" resultType="java.lang.Long">
    select count(*) from blogs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blogs
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.blogname != null">
        blogName = #{record.blogname,jdbcType=VARCHAR},
      </if>
      <if test="record.imgname != null">
        imgName = #{record.imgname,jdbcType=VARCHAR},
      </if>
      <if test="record.blogcontent != null">
        blogContent = #{record.blogcontent,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=VARCHAR},
      </if>
      <if test="record.hot != null">
        hot = #{record.hot,jdbcType=INTEGER},
      </if>
      <if test="record.visittime != null">
        visitTime = #{record.visittime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blogs
    set Id = #{record.id,jdbcType=INTEGER},
      blogName = #{record.blogname,jdbcType=VARCHAR},
      imgName = #{record.imgname,jdbcType=VARCHAR},
      blogContent = #{record.blogcontent,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=VARCHAR},
      hot = #{record.hot,jdbcType=INTEGER},
      visitTime = #{record.visittime,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lance.bean.Blogs">
    update blogs
    <set>
      <if test="blogname != null">
        blogName = #{blogname,jdbcType=VARCHAR},
      </if>
      <if test="imgname != null">
        imgName = #{imgname,jdbcType=VARCHAR},
      </if>
      <if test="blogcontent != null">
        blogContent = #{blogcontent,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="hot != null">
        hot = #{hot,jdbcType=INTEGER},
      </if>
      <if test="visittime != null">
        visitTime = #{visittime,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lance.bean.Blogs">
    update blogs
    set blogName = #{blogname,jdbcType=VARCHAR},
      imgName = #{imgname,jdbcType=VARCHAR},
      blogContent = #{blogcontent,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=VARCHAR},
      hot = #{hot,jdbcType=INTEGER},
      visitTime = #{visittime,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>